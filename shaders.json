{"food.frag":"precision mediump float;\n\nvarying vec2 varPos;\nvarying lowp vec3 vColor;\nvarying lowp float vOpacity;\n\nconst vec3 centerColor = vec3(1.0, 1.0, 1.0);\n\nfloat norm_clamp(float x) {\n\treturn min(1.0, max(0.0, x));\n}\n\nvoid main(void) {\n\tfloat d2 = dot(varPos, varPos);\n\tfloat alpha = norm_clamp(1.0 - 1.5*(d2 - 0.333));\n\talpha = alpha * alpha * vOpacity * vOpacity;\n\tvec3 color = mix(centerColor, vColor, 0.5 + 0.666 * d2);\n\tgl_FragColor = vec4(color, alpha);\n}","food.vert":"precision mediump float;\n\nattribute vec2 aPosition;\nattribute vec2 aLocalPos;\nattribute float aColorIndex;\n\nuniform mat3 uTransform;\nuniform sampler2D uColorSampler;\nuniform vec2 uAttractorPosition;\n\nvarying vec2 varPos;\nvarying lowp vec3 vColor;\nvarying lowp float vOpacity;\n\nconst float cMoveDist = 7.5;\n\nvoid main(void) {\n    varPos = aLocalPos;\n    vColor = texture2D(uColorSampler, vec2(aColorIndex, 0.75)).rgb;\n\n    float d = distance(aPosition, uAttractorPosition);\n    float s = min(1.0, d * 0.25);\n    vOpacity = min(1.0, d * 0.375);\n\n    vec2 pos = (d < cMoveDist) ? mix(aPosition, uAttractorPosition, 1.0 - s) : aPosition;\n\n    gl_Position = vec4(uTransform * vec3(pos, 1.0), 1.0);\n}","head.frag":"precision mediump float;\n\nuniform sampler2D uColorSampler;\nuniform lowp float uSkin;\nuniform lowp float uSnakeFast;\n\nconst vec4 fastColorBoost = vec4(0.175, 0.175, 0.175, 0.0);\n\nvoid main(void) {\n\tvec4 skinColor = texture2D(uColorSampler, vec2(uSkin, 0.25));\n\tgl_FragColor = skinColor + uSnakeFast * fastColorBoost;\n}","head.vert":"precision mediump float;\n\nattribute vec2 vRelPosition;\n\nuniform mat3 uTransform;\nuniform float uSnakeWidth;\nuniform vec2 uHeadPosition;\nuniform float uHeadRotation;\n\nvoid main(void) {\n    float c = cos(uHeadRotation);\n    float s = sin(uHeadRotation);\n    mat2 rotate = mat2(c,s,-s,c);\n    float size = 0.5 * uSnakeWidth;\n    vec2 position = uHeadPosition + size * rotate * vRelPosition;\n    gl_Position = vec4(uTransform * vec3(position, 1.0), 1.0);\n}","heatmap.frag":"precision mediump float;\n\nuniform vec2 uCameraPosition;\nuniform sampler2D uHeatMapTexture1;\nuniform sampler2D uHeatMapTexture2;\nuniform float uTextureMix;\n\nvarying vec2 vPosition;\n\nconst float MARKER_SIZE = 0.015;\nconst vec4 MARKER_COLOR = vec4(1.0, 1.0, 1.0, 1.0);\nconst vec4 COOL_COLOR = vec4(0.4, 0.4, 0.4, 0.5);\n\nvoid main(void) {\n\t// edge alpha falloff\n\tvec2 ed = 2.0 * (vec2(0.5, 0.5) - abs(vPosition - vec2(0.5, 0.5)));\n\tfloat med = min(ed.x, ed.y);\n\tfloat alpha = min(8.0 * med, 1.0);\n\n\t// heat map color\n\tfloat heat = mix(\n\t\ttexture2D(uHeatMapTexture1, vPosition).r,\n\t\ttexture2D(uHeatMapTexture2, vPosition).r,\n\t\tuTextureMix\n\t);\n\tvec4 hotColor = vec4(1.0, 0.4 * heat, max(0.0, 0.5 * heat - 0.4), 1.0);\n\tvec4 color = mix(COOL_COLOR, hotColor, 1.3 * heat);\n\tcolor.a *= alpha;\n\n\t// camera position marker\n\tfloat d = distance(vPosition, uCameraPosition);\n\tgl_FragColor = d <= MARKER_SIZE ? MARKER_COLOR : color;\n}","heatmap.vert":"precision mediump float;\n\nattribute vec2 aRelPosition;\n\nuniform mat3 uTransform;\n\nvarying vec2 vPosition;\n\nvoid main(void) {\n    vPosition = aRelPosition;\n    gl_Position = vec4(uTransform * vec3(aRelPosition, 1.0), 1.0);\n}","snake.frag":"precision mediump float;\n\nuniform sampler2D uColorSampler;\nuniform lowp float uSkin;\nuniform highp float uSnakeLength;\nuniform lowp float uSnakeFast;\n\nvarying float vPathOffset;\nvarying float vNormalOffset;\n\nconst vec3 darkGrey = vec3(0.1, 0.1, 0.1);\nconst vec3 fastColorBoost = vec3(0.175, 0.175, 0.175);\n\nvoid main(void) {\n\tvec3 skinColor = texture2D(uColorSampler, vec2(uSkin, 0.25)).rgb;\n\tvec3 darkColor = mix(skinColor, darkGrey, 0.5);\n\n\tfloat co = abs(vNormalOffset);\n\tco = co * co;\n\tco = co * (1.0 + 0.25*sin(2.0*vPathOffset));\n\n\tvec3 color = mix(skinColor + uSnakeFast * fastColorBoost, darkColor, co);\n\n\tgl_FragColor = vec4(color, vPathOffset < uSnakeLength ? 1.0 : 0.0);\n}","snake.vert":"precision mediump float;\n\nattribute vec2 aPosition;\nattribute vec2 aNormal;\nattribute float aNormalOffset;\nattribute float aRelativePathOffset;\n\nuniform mat3 uTransform;\nuniform highp float uSnakeMaxWidth;\nuniform highp float uChunkPathOffset;\nuniform highp float uSnakeLength;\nuniform highp float uSnakeThinningStart;\n\nvarying highp float vPathOffset;\nvarying float vNormalOffset;\n\nvoid main(void) {\n    vNormalOffset = aNormalOffset;\n\n    // distance from the snake head (along the snake path)\n    vPathOffset = uChunkPathOffset + aRelativePathOffset;\n\n    // thinning parameter t: 0 -> full width, 1 -> zero width\n    float t = min(1.0, max(0.0, vPathOffset - uSnakeThinningStart) / (uSnakeLength - uSnakeThinningStart));\n    float u = (aRelativePathOffset < 0.0) ? 0.9 : 1.0 - (t * t * t);\n\n    float size = 0.5 * u * uSnakeMaxWidth;\n    vec2 position = aPosition + (aNormalOffset * size) * aNormal;\n    gl_Position = vec4(uTransform * vec3(position, 1.0), 1.0);\n}","solidcolor.frag":"uniform lowp vec4 uColor;\n\nvoid main(void) {\n\tgl_FragColor = uColor;\n}","solidcolor.vert":"precision mediump float;\n\nattribute vec2 vPosition;\n\nuniform mediump mat3 uTransform;\n\nvoid main(void) {\n    gl_Position = vec4(uTransform * vec3(vPosition, 1.0), 1.0);\n}"}