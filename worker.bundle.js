(()=>{"use strict";const e=Symbol("Comlink.proxy"),t=Symbol("Comlink.endpoint"),n=Symbol("Comlink.releaseProxy"),a=Symbol("Comlink.thrown"),s=e=>"object"==typeof e&&null!==e||"function"==typeof e,i=new Map([["proxy",{canHandle:t=>s(t)&&t[e],serialize(e){const{port1:t,port2:n}=new MessageChannel;return r(e,t),[n,[n]]},deserialize:e=>(e.start(),c(e,[],undefined))}],["throw",{canHandle:e=>s(e)&&a in e,serialize({value:e}){let t;return t=e instanceof Error?{isError:!0,value:{message:e.message,name:e.name,stack:e.stack}}:{isError:!1,value:e},[t,[]]},deserialize(e){if(e.isError)throw Object.assign(new Error(e.value.message),e.value);throw e.value}}]]);function r(t,n=self){n.addEventListener("message",(function s(i){if(!i||!i.data)return;const{id:h,type:c,path:u}=Object.assign({path:[]},i.data),d=(i.data.argumentList||[]).map(m);let g;try{const n=u.slice(0,-1).reduce(((e,t)=>e[t]),t),a=u.reduce(((e,t)=>e[t]),t);switch(c){case"GET":g=a;break;case"SET":n[u.slice(-1)[0]]=m(i.data.value),g=!0;break;case"APPLY":g=a.apply(n,d);break;case"CONSTRUCT":g=function(t){return Object.assign(t,{[e]:!0})}(new a(...d));break;case"ENDPOINT":{const{port1:e,port2:n}=new MessageChannel;r(t,n),g=l(e,[e])}break;case"RELEASE":g=void 0;break;default:return}}catch(e){g={value:e,[a]:0}}Promise.resolve(g).catch((e=>({value:e,[a]:0}))).then((e=>{const[t,a]=f(e);n.postMessage(Object.assign(Object.assign({},t),{id:h}),a),"RELEASE"===c&&(n.removeEventListener("message",s),o(n))}))})),n.start&&n.start()}function o(e){(function(e){return"MessagePort"===e.constructor.name})(e)&&e.close()}function h(e){if(e)throw new Error("Proxy has been released and is not useable")}function c(e,a=[],s=function(){}){let i=!1;const r=new Proxy(s,{get(t,s){if(h(i),s===n)return()=>g(e,{type:"RELEASE",path:a.map((e=>e.toString()))}).then((()=>{o(e),i=!0}));if("then"===s){if(0===a.length)return{then:()=>r};const t=g(e,{type:"GET",path:a.map((e=>e.toString()))}).then(m);return t.then.bind(t)}return c(e,[...a,s])},set(t,n,s){h(i);const[r,o]=f(s);return g(e,{type:"SET",path:[...a,n].map((e=>e.toString())),value:r},o).then(m)},apply(n,s,r){h(i);const o=a[a.length-1];if(o===t)return g(e,{type:"ENDPOINT"}).then(m);if("bind"===o)return c(e,a.slice(0,-1));const[d,l]=u(r);return g(e,{type:"APPLY",path:a.map((e=>e.toString())),argumentList:d},l).then(m)},construct(t,n){h(i);const[s,r]=u(n);return g(e,{type:"CONSTRUCT",path:a.map((e=>e.toString())),argumentList:s},r).then(m)}});return r}function u(e){const t=e.map(f);return[t.map((e=>e[0])),(n=t.map((e=>e[1])),Array.prototype.concat.apply([],n))];var n}const d=new WeakMap;function l(e,t){return d.set(e,t),e}function f(e){for(const[t,n]of i)if(n.canHandle(e)){const[a,s]=n.serialize(e);return[{type:"HANDLER",name:t,value:a},s]}return[{type:"RAW",value:e},d.get(e)||[]]}function m(e){switch(e.type){case"HANDLER":return i.get(e.name).deserialize(e.value);case"RAW":return e.value}}function g(e,t,n){return new Promise((a=>{const s=new Array(4).fill(0).map((()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16))).join("-");e.addEventListener("message",(function t(n){n.data&&n.data.id&&n.data.id===s&&(e.removeEventListener("message",t),a(n.data))})),e.start&&e.start(),e.postMessage(Object.assign({id:s},t),n)}))}const p=()=>{};class k{#e;onclose=p;onJSONMessage=p;onBinaryMessage=p;constructor(e){this.#e=e,this.#e.onclose=e=>{const{code:t,reason:n,wasClean:a}=e;console.info("WebSocket closed",t,n,a),this.onclose()},this.#e.onerror=()=>console.error("WebSocket error"),this.#e.onmessage=e=>{const t=e.data;if(t instanceof ArrayBuffer)this.onBinaryMessage(t);else{const e=JSON.parse(t);this.onJSONMessage(e)}}}sendJSON(e){this.#e.send(JSON.stringify(e))}sendBinary(e){this.#e.send(e)}close(){this.#e.readyState!==WebSocket.CLOSED&&this.#e.close()}isOpen(){return this.#e.readyState===WebSocket.OPEN}}function w(e,t,n){const a=new DataView(e,t,26),s=a.getUint8(5),i=(8,r=e=>0!=(s&1<<e),Array.from({length:8},((e,t)=>r(t))));var r;const o=a.getFloat32(6,!1),h=a.getFloat32(10,!1),c=a.getFloat32(14,!1);return{data:{id:a.getUint16(0,!1),headChunkId:a.getUint32(0,!1),skin:a.getUint8(4),fast:i[0],fastHistory:i,length:o,width:x(o,n),headDirection:[h,c],headPosition:{x:a.getFloat32(18,!1),y:a.getFloat32(22,!1)}},nextByteOffset:t+26}}function x(e,t){const n=t.snakes.minWidth,a=t.snakes.maxWidth-t.snakes.minWidth;var s;return n+2*(s=(e-t.snakes.minLength)/(1024-t.snakes.minLength)*3.66,1/(1+Math.exp(-s))-.5)*a}function y(e){if(!Number.isFinite(e))return 0;for(;Math.abs(e)>Math.PI;)e-=2*Math.sign(e)*Math.PI;return e}Math.PI;class E{minX;maxX;minY;maxY;constructor(e,t,n,a){this.minX=e,this.maxX=t,this.minY=n,this.maxY=a}static fromTransferable(e){return new E(e.minX,e.maxX,e.minY,e.maxY)}static createAt(e,t,n){const a=.5*t,s=.5*n;return new E(e.x-a,e.x+a,e.y-s,e.y+s)}static distance2(e,t){let n=0,a=0;return e.maxX<t.minX?n=t.minX-e.maxX:t.maxX<e.minX&&(n=e.minX-t.maxX),e.maxY<t.minY?a=t.minY-e.maxY:t.maxY<e.minY&&(a=e.minY-t.maxY),n*n+a*a}get width(){return this.maxX-this.minX}get height(){return this.maxY-this.minY}createTransferable(e=0){return{minX:this.minX-e,maxX:this.maxX+e,minY:this.minY-e,maxY:this.maxY+e}}extendTo(e,t=Number.EPSILON){return new E(Math.min(this.minX,e.x-t),Math.max(this.maxX,e.x+t),Math.min(this.minY,e.y-t),Math.max(this.maxY,e.y+t))}contains(e){const t=this.minX<=e.x&&e.x<this.maxX,n=this.minY<=e.y&&e.y<this.maxY;return t&&n}}class b{vertices;buffer;#t;#n;#a=0;constructor(e,t){this.#t=e,this.vertices=2*this.#t,this.#n=t,this.buffer=new Float32Array(6*this.vertices)}addPoint(e,t,n,a){this.#s();const s=this.buffer;let i=this.#a;this.#a+=12;const r=n-.5*Math.PI,o=Math.cos(r),h=Math.sin(r),c=this.#n-a;s[i+0]=e,s[i+1]=t,s[i+2]=o,s[i+3]=h,s[i+4]=1,s[i+5]=c,i+=6,s[i+0]=e,s[i+1]=t,s[i+2]=o,s[i+3]=h,s[i+4]=-1,s[i+5]=c}duplicateLastPoint(){this.#s();const e=this.#a,t=e-12;if(t<0)throw new Error("No point to duplicate.");this.#a+=12;const n=this.buffer;for(let a=0;a<12;a++)n[e+a]=n[t+a]}#s(){if(this.#a>=this.buffer.length)throw new RangeError("Cannot add another point to vertex buffer.")}}function S(e,t,n){const a=new DataView(e,t);if(a.byteLength<21)throw new RangeError("Invalid buffer (too small for header)");const s=a.getUint16(0,!1),i=a.getUint32(0,!1),r=a.getUint8(4);let o=a.getFloat32(5,!1),h=a.getFloat32(9,!1),c=a.getFloat32(13,!1);const u=a.getFloat32(17,!1),d=21+r===96;if(!d&&0!==u)throw new Error(`Invalid chunk offset value: ${u}`);if(a.byteLength<21+r)throw new RangeError("Invalid buffer (too small)");const l=r+1,f=new Float32Array(4*l);let m,g,p,k,w=0;m=g=h,p=k=c,f[0]=h,f[1]=c,f[2]=w,f[3]=o;for(let e=0;e<r;e++){const t=a.getUint8(21+e),s=(128&t)>0,i=1+((112&t)>>4),r=v(n,15&t),u=o+.5*r;o=y(o+r);const d=i*(s?n.snakes.fastSpeed:n.snakes.speed);h+=d*Math.cos(o),c+=d*Math.sin(o),w+=d;const l=4*(e+1);f[l+0]=h,f[l+1]=c,f[l+2]=w,f[l+3]=u,m=Math.min(m,h),g=Math.max(g,h),p=Math.min(p,c),k=Math.max(k,c)}f[f.length-1]=o,w=Math.max(w,f[f.length-2]);const x=new b(l+1,w);for(let e=0;e<l;e++){const t=4*e;x.addPoint(f[t+0],f[t+1],f[t+3],f[t+2])}x.duplicateLastPoint();const S=new E(m,g,p,k);return{data:{id:i,snakeId:s,length:w,offset:u,full:d,vertices:x.vertices,data:x.buffer,boundingBox:S.createTransferable()},nextByteOffset:t+21+r}}function v(e,t){return(1-((1&t)<<1))*Math.floor(t/2)*e.snakes.maxTurnDelta/7}const U=Math.pow(2,53),M=65535,[L,C,I]=[5,57068,58989],N=[.64,1,1.5],P=2*Float32Array.BYTES_PER_ELEMENT+3*Float32Array.BYTES_PER_ELEMENT+Float32Array.BYTES_PER_ELEMENT+Int32Array.BYTES_PER_ELEMENT,T=new class{#i;#r;#o;constructor(e){void 0===e&&(e=Math.floor(281474976710656*Math.random())),this.setSeed(e)}nextBoolean(){return 0!=this.#h(1)}nextFloat(){return this.#h(24)/16777216}nextDouble(){return(134217728*this.#h(26)+this.#h(27))/U}#c(){let e=11,t=this.#i*I+e;e=t>>>16,t&=M;let n=this.#r*I+this.#i*C+e;e=n>>>16,n&=M;let a=this.#o*I+this.#r*C+this.#i*L+e;return a&=M,[this.#o,this.#r,this.#i]=[a,n,t],65536*this.#o+this.#r}#h(e){return this.#c()>>>32-e}setSeed(e){this.#u(e),this.#i=e&M^I,this.#r=e/65536&M^C,this.#o=e/4294967296&M^L}#u(e,t=Number.MAX_SAFE_INTEGER){if(e<0||e>t)throw RangeError()}};function A(e,t,n){const a=new DataView(e,t),s=n.chunks.size,i=a.getUint16(2,!1),r=a.getUint16(0,!1),o=a.getUint8(0),h=a.getUint8(1),c=(o-.5*n.chunks.columns)*s,u=(h-.5*n.chunks.rows)*s,d=new ArrayBuffer(i*P),l=new DataView(d);for(let e=0;e<i;e++){const t=4+3*e,n=a.getInt8(t+0)+128,i=a.getInt8(t+1)+128,r=a.getUint8(t+2),o=N[r>>6],h=63&r,d=c+n/256*s,f=u+i/256*s;T.setSeed(a.getUint16(t)<<8|r);const m=e*P;l.setFloat32(m+0,d,!0),l.setFloat32(m+4,f,!0),l.setFloat32(m+8,O(),!0),l.setFloat32(m+12,O(),!0),l.setFloat32(m+16,O(),!0),l.setFloat32(m+20,o,!0),l.setInt32(m+24,h%7,!0)}return{data:{id:r,vertexBuffer:d,count:i,bounds:{minX:c,maxX:c+s,minY:u,maxY:u+s}},nextByteOffset:t+4+3*i}}function O(){const e=T.nextBoolean()?1:-1,t=T.nextFloat();return e*(.75+.85*t*t)}function B(e,t,n,a,s){const i=new Array(n);for(let r=0;r<n;r++){const{data:n,nextByteOffset:o}=e(a,s,t);i[r]=n,s=o}return{data:i,nextByteOffset:s}}class D{#d=new Set;#l=!1;addListener(e){this.#l||this.#d.add(e)}trigger(e){this.#d.forEach((t=>t(e)))}done(){this.#d.clear(),this.#l=!0}}let Y=null;const F=new class{#f;#m=performance.now();#g=null;#p=void 0;#k;constructor(e,t){this.#f=e,this.#k=t}setValue(e){if(void 0!==this.#p)return void(this.#g=e);const t=performance.now(),n=t-this.#m;if(n>=this.#f)return this.#m=t,void this.#k(e);const a=this.#f-n;this.#p=setTimeout((()=>{this.#p=void 0,null!==this.#g&&(this.#k(this.#g),this.#g=null)}),a)}abort(){void 0!==this.#p&&(clearTimeout(this.#p),this.#p=void 0)}}(1e3/30,(e=>{if(Y&&Y.isOpen()){const t=new ArrayBuffer(9),n=new DataView(t),a=E.fromTransferable(e.viewBox);n.setFloat32(0,a.width/a.height,!1),n.setFloat32(4,e.targetAlpha,!1),n.setUint8(8,e.wantsToBeFast?1:0),Y.sendBinary(t)}})),X={serverUpdate:new D,error:new D,disconnect:new D,spectatorChange:new D},R=new class{config;#w=[];#x=new Map;#y;constructor(e){this.#y=e}init(e){this.config=e.gameConfig,e.snakeName&&this.#x.set(e.snakeId,e.snakeName)}nextUpdate(){const e=this.#w.shift(),t=this.#w.length>0;return e&&e.snakes.forEach((e=>e.name=this.#x.get(e.id))),{ticksSinceLastUpdate:0,snakes:[],snakeChunks:[],foodChunks:[],snakeDeaths:[],...e,moreUpdates:t}}addBinaryUpdate(e){const t=function(e,t){const n=new DataView(t),a=n.getUint8(0),s=n.getUint8(1),i=n.getUint8(2),r=n.getUint8(3),o=0!==n.getUint8(4),{data:h,nextByteOffset:c}=B(w,e,s,t,5),{data:u,nextByteOffset:d}=B(S,e,i,t,c),{data:l,nextByteOffset:f}=B(A,e,r,t,d);let m,g=f;if(o){const n=e.chunks.rows*e.chunks.columns;g+=n;const a=new Uint8Array(t,f,n);m=new Uint8Array(a)}return g!==t.byteLength&&console.error(`Unexpected update buffer size (expected ${g}, was ${t.byteLength})`),{ticksSinceLastUpdate:a,snakeInfos:h,snakeChunkData:u,foodChunkData:l,heatMap:m}}(this.config,e);t.ticksSinceLastUpdate<=0&&console.error(`Binary update not supported! ticks: ${t.ticksSinceLastUpdate}`);const n=this.#w.length>0&&0===this.#w[this.#w.length-1].ticksSinceLastUpdate,a=n?this.#w[this.#w.length-1]:{ticksSinceLastUpdate:0,snakes:[],snakeChunks:[],foodChunks:[],snakeDeaths:[]};a.ticksSinceLastUpdate=t.ticksSinceLastUpdate,a.snakes.push(...t.snakeInfos),a.snakeChunks.push(...t.snakeChunkData),a.foodChunks.push(...t.foodChunkData),t.heatMap&&(a.heatMap=t.heatMap),n||this.#w.push(a),this.duration>.5&&console.warn(`Update congestion! Current delay: ${this.duration.toFixed(2)}s`),this.#E()}addJSONUpdate(e){switch(e.tag){case"SnakeDeathInfo":console.info(`Snake ${e.deadSnakeId} has died.`),this.#b({snakeDeaths:[{deadSnakeId:e.deadSnakeId,killer:void 0!==e.killerSnakeId?{snakeId:e.killerSnakeId,name:this.#S(e.killerSnakeId)}:void 0}]}),this.#x.delete(e.deadSnakeId),this.#E();break;case"GameStatistics":this.#b({leaderboard:(({tag:e,...t})=>t)(e)}),e.leaderboard.forEach((({id:e,name:t})=>this.#x.set(e,t))),this.#E();break;case"SnakeNameUpdate":for(const[t,n]of Object.entries(e.names)){const e=parseInt(t,10);this.#x.set(e,n)}break;default:throw new Error(`Unexpected message from server. (tag = ${e.tag})`)}}get duration(){return this.config.tickDuration*this.#w.map((e=>e.ticksSinceLastUpdate)).reduce(((e,t)=>e+t),0)}#b(e){let t;0===this.#w.length?(t={ticksSinceLastUpdate:0,snakes:[],snakeChunks:[],foodChunks:[],snakeDeaths:[]},this.#w.push(t)):t=this.#w[this.#w.length-1],e.leaderboard&&(t.leaderboard=e.leaderboard),e.snakeDeaths&&t.snakeDeaths.push(...e.snakeDeaths)}#E(){this.#y&&this.#y()}#S(e){return this.#x.get(e)??`Snake ${e}`}}((function(){X.serverUpdate.trigger()})),Q={async init(e){if(null!==Y)throw new Error("Worker is already initialized.");console.info(`Connecting to ${e}`),Y=await async function(e){const t=new WebSocket(e);return t.binaryType="arraybuffer",await new Promise(((e,n)=>{t.onopen=()=>{t.onopen=null,e()},t.onerror=()=>{t.onerror=null,n()}})),new k(t)}(e);const t=await new Promise(((e,t)=>{const n=setTimeout((()=>t(new Error("GameInfo timeout."))),1500);Y.onJSONMessage=t=>{"GameInfo"===t.tag?(clearTimeout(n),e(t)):console.warn("Game init: Unexpected message from server.",t)}}));return R.init(t),Y.onJSONMessage=e=>{"SpectatorChange"===e.tag?X.spectatorChange.trigger(e):R.addJSONUpdate(e)},Y.onBinaryMessage=e=>{R.addBinaryUpdate(e)},Y.onclose=()=>{X.disconnect.trigger(),self.close()},{config:R.config,targetSnakeId:t.snakeId,startPosition:t.startPosition}},sendUserInput(e,t,n){F.setValue({targetAlpha:e,wantsToBeFast:t,viewBox:n})},getDataChanges(){const e=R.nextUpdate(),t=[...e.snakeChunks.map((e=>e.data.buffer)),...e.foodChunks.map((e=>e.vertexBuffer))];return e.heatMap&&t.push(e.heatMap.buffer),l(e,t)},quit(){Y&&Y.close(),self.close()},addEventListener(e,t){X[e].addListener(t)},onError(e){X.error.addListener(e)},onSpectatorChange(e){X.spectatorChange.addListener(e)}};self.onerror=(e,t,n,a,s)=>{X.error.trigger(e.toString())},r(Q)})();